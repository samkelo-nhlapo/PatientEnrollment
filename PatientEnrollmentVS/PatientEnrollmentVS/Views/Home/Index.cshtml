@{
    ViewBag.Title = "Home Page";
}

@using PatientEnrollmentVS.Models;
@model LocationModel

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

@using (Html.BeginForm("SavePatient", "Home", FormMethod.Post, new { @id = "frmHome" }))
{
    <div class="row">
        <label>First Name</label>
        @Html.TextBoxFor(x => x.FirstName, new { @class = "select-block" })
        <label>Last Name</label>
        @Html.TextBoxFor(x => x.LastName, new { @class = "select-block" })
    </div>

    <div class="row">
        <label>ID Number</label>
        @Html.TextBoxFor(x => x.ID_Number, new {@class = "select-block"})
    </div>
    
    <div class="row">
        <label>DateOfBirth</label>
        @Html.TextBoxFor(x => x.DateOfBirth, new { @class = "select-block" })
    </div>

    @*<div class="row">
        <label>GenderIDFK</label>
        @Html.TextBoxFor(x => x.GenderIDFK, new { @class = "select-block" })
    </div>*@

    <div class="row">
        <label>Gender</label>
        @Html.DropDownListFor(x => x.GenderId, new List<SelectListItem>()
                { new SelectListItem()
                    { 
                        Value = Model.GenderId, 
                        Text = Model.GenderDescription, 
                        Selected = true
                    } 
                }, "0", new { id = "dllGetGender", @Class = "select-block"})
    </div>


    <div class="row">
        <label>PhoneNumber</label>
        @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "select-block" })
        
        @Html.DropDownListFor(x => x.PhoneTypeId, new List<SelectListItem>()
                { new SelectListItem()
                    {
                        Value = Model.PhoneTypeId,
                        Text = Model.PhoneTypeDescription,
                        Selected = true
                    }
                },"0", new { id = "dllGetPhoneType", @class = "select-block"})

        @*<label>PhoneType</label>
        @Html.TextBoxFor(x => x.PhoneType, new { @class = "select-block" })*@
    </div>

    <div class="row">
        <label>Email</label>
        @Html.TextBoxFor(x => x.Email, new { @class = "select-block" })

        @Html.DropDownListFor(x => x.EmailTypeId, new List<SelectListItem>()
                { new SelectListItem()
                    {
                        Value = Model.EmailTypeId,
                        Text = Model.EmailTypeDescription,
                        Selected = true
                    }
                }, "0", new { id = "dllGetEmailtype", @class = "select-block" })

        @*<label>EmailType</label>
        @Html.TextBoxFor(x => x.EmailType, new { @class = "select-block" })*@
    </div>

    <div class="row">
        <label>Line1</label>
        @Html.TextBoxFor(x => x.Line1, new { @class = "select-block" })
    </div>

    <div class="row">
        <label>Line2</label>
        @Html.TextBoxFor(x => x.Line2, new { @class = "select-block" })
    </div>

    <div class="row">
        <label>Countries</label>
        @Html.DropDownListFor(x => x.CountryId, new List<SelectListItem>()
            { new SelectListItem()
                {
                    Value = Model.CountryId,
                    Text = Model.CountryName,
                    Selected = true
                }
            }, "0", new { id = "dllGetCountries", @class = "select-block" })

    </div>

    <div class="row">
        <label>Provinces</label>
        @Html.DropDownListFor(x => x.ProvinceId, new List<SelectListItem>()
            { new SelectListItem()
                {
                    Value = Model.ProvinceId,
                    Text = Model.ProvinceName,
                    Selected = true
                }
            }, "0", new { id = "dllGetProvinces", @class = "select-block" })
    </div>

    @*<div class="row">
        <label>Cities</label>
        @Html.DropDownListFor(x => x.CityId, new List<SelectListItem>()
            { new SelectListItem()
                {
                    Value = Model.CityId,
                    Text = Model.CityName,
                    Selected = true
                }
            }, "0", new { id = "dllGetCities", @class = "select-block" })
    </div>*@
    
    @*<div class="row">
        <label>MaritalStatusIDFK</label>
        @Html.TextBoxFor(x => x.MaritalStatusIDFK, new { @class = "select-block" })
    </div>*@

    <div class="row">
        <label>Merital Status</label>
        @Html.DropDownListFor(x => x.MaritalStatusId, new List<SelectListItem>()
            { new SelectListItem()
                {
                    Value = Model.MaritalStatusId,
                    Text = Model.MaritalStatusDescription,
                    Selected = true
                }
            }, "0", new { id = "dllGetMeritalStatus", @class = "select-block" })
    </div>

    <div class="row">
        <label>MedicationList</label>
        @Html.TextBoxFor(x => x.MedicationList, new { @class = "select-block" })
    </div>

    <div class="row">
        <label>EmergencyName</label>
        @Html.TextBoxFor(x => x.EmergencyName, new { @class = "select-block" })
        <label>Relationship</label>
        @Html.TextBoxFor(x => x.Relationship, new { @class = "select-block" })
    </div>

    <div class="row">
        <label>PrimaryCarrierName</label>
        @Html.TextBoxFor(x => x.PrimaryCarrierName, new { @class = "select-block" })
        <label>FPolicyHolderPhoneNumber</label>
        @Html.TextBoxFor(x => x.FPolicyHolderPhoneNumber, new { @class = "select-block" })
        <label>FPolicyHolderName</label>
        @Html.TextBoxFor(x => x.FPolicyHolderName, new { @class = "select-block" })
        <label>FPolicyHolderDateOfBirth</label>
        @Html.TextBoxFor(x => x.FPolicyHolderDateOfBirth, new { @class = "select-block" })
        <label>FPolicyHolderRelationship</label>
        @Html.TextBoxFor(x => x.FPolicyHolderRelationship, new { @class = "select-block" })
        <label>FPolicyHolderGenderIDFK</label>
        @Html.TextBoxFor(x => x.FPolicyHolderGenderIDFK, new { @class = "select-block" })
    </div>
    <div class="row">
        

    @*<label>CityIDFK</label>
        @Html.TextBoxFor(x => x.CityIDFK, new { @class = "select-block" })
    <label>ProvinceIDFK</label>
        @Html.TextBoxFor(x => x.ProvinceIDFK, new { @class = "select-block" })
    <label>CountryIDFK</label>
        @Html.TextBoxFor(x => x.CountryIDFK, new { @class = "select-block" })*@

        <label>SecondaryCarrierName</label>
        @Html.TextBoxFor(x => x.SecondaryCarrierName, new { @class = "select-block" })

        <label>SPolicyHolderPhoneNumber</label>
        @Html.TextBoxFor(x => x.SPolicyHolderPhoneNumber, new { @class = "select-block" })
    
        <label>SPolicyHolderName</label>
        @Html.TextBoxFor(x => x.SPolicyHolderName, new { @class = "select-block" })
        <label>SPolicyHolderDateOfBirth</label>
        @Html.TextBoxFor(x => x.SPolicyHolderDateOfBirth, new { @class = "select-block" })
        <label>SPolicyHolderRelationship</label>
        @Html.TextBoxFor(x => x.SPolicyHolderRelationship, new { @class = "select-block" })
        <label>SPolicyHolderGenderIDFK</label>
        @Html.TextBoxFor(x => x.SPolicyHolderGenderIDFK, new { @class = "select-block" })
    </div>

    <div class="row">
        <input type="button" value="Save Event" class="btn btn-primary" onclick="SaveButton()" />
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        $.ajax(
            {
                url: "/Home/GetCountries",
                dataType: "json",
                cache: true,
                async: true,
                global: false,
                success: function (data) {
                    var items = "<option value ='" + "0" + "'>" + "Select Country" + "</option>";

                    $.each(data, function (i, value) {
                        items += "<option value ='" + value.CountryId + "'>" + value.CountryName + "</option>";

                        $('#dllGetCountries').html(items);
                    })
                },
                error: function () {
                    alert("not successful");
                }
            })

        $.ajax({
            url: "/Home/GetProvinces",
            dataType: "json",
            cache: true,
            async: true,
            global: false,
            success: function (data) {
                var items = "<option value ='" + "0" + "'>" + "Select Country" + "</option>";

                $.each(data, function (i, value) {
                    items += "<option value ='" + value.ProvinceId + "'>" + value.ProvinceName + "</option>";

                    $('#dllGetProvinces').html(items);
                })
            },
            error: function (xhr) {
                alert("Not successfull")
            }
        })

        //debugger
        //$.ajax({
        //    url: "/Home/GetCities",
        //    dataType: "json",
        //    cache: true,
        //    async: true,
        //    global: false,
        //    success: function (data) {

        //        alert("cities successfull");
        //        //var items = "<option value ='" + "0" + "'>" + "Select City" + "</option>";

        //        //$.each(data, function (i, value)
        //        //{
        //        //    items += "<option value ='" + value.CityId + "'>" + value.CityName + "</option>";

        //        //    $('#dllGetCities').html(items);
        //        //})
        //    },
        //    error: function (xhr)
        //    {
        //        alert("Not successfull cities");
        //    }
        //})

        debugger
        $.ajax({
            url: "/Home/GetMeritalStatus",
            dataType: "json",
            cache: true,
            async: true,
            global: false,
            success: function (data) {

                var items = "<option value ='" + "0" + "'>" + "Select Status" + "</option>";

                $.each(data, function (i, value) {
                    items += "<option value ='" + value.MaritalStatusId + "'>" + value.MaritalStatusDescription + "</option>";

                    $('#dllGetMeritalStatus').html(items);
                })
            },
            error: function (xhr) {
                alert("not successfull ");
            }
        })

        debugger
        $.ajax({
            url: "/Home/GetPhoneType",
            dataType: "json",
            cache: true,
            async: true,
            global: false,
            success: function (data)
            {
                var items = "<option value ='" + "0" + "'>" + "Select PhoneType" + "</option>";
                $.each(data, function (i, value)
                {
                    items += "<option value ='" + value.PhoneTypeId + "'>" + value.PhoneTypeDescription + "</option>";
                    $('#dllGetPhoneType').html(items);
                })

            },
            error: function (xhr)
            {
                alert("Phone type not successfull");
            }
        })

        debugger
        $.ajax({
            url: "/Home/GetEmailType",
            dataType: "json",
            cache: true,
            async: true,
            global: false,
            success: function (data)
            {
                var items = "<option value ='" + "0" + "'>" + "Select EmailType" + "</option>";

                $.each(data, function (i, value)
                {
                    items += "<option value ='" + value.EmailTypeId + "'>" + value.EmailTypeDescription + "</option>";

                    $('#dllGetEmailtype').html(items);
                })

            },
            error: function (xhr)
            {
                alert("emailType not successful");
            }
        })

        debugger
        $.ajax({
            url: "/Home/GetGender",
            dataType: "json",
            cache: true,
            async: true,
            global: false,
            success: function (data)
            {
                var items = "<option value ='" + "0" + "'>" + "Select Gender" + "</option>";

                $.each(data, function (i, value)
                {
                    items += "<option value ='" + value.GenderId + "'>" + value.GenderDescription + "</option>";

                    $('#dllGetGender').html(items);
                })

            },
            error: function (xhr)
            {
                alert("Gender not successful");
            }
        })
    })
</script>
<script>

    //debugger
    //function SaveButton()
    //{
    //    var locationModel = {};
    //    locationModel.FirstName = $("[id*=txtFirstName]").val();
    //    locationModel.LastName = $("[id*=txtLastName]").val();
    //    locationModel.ID_Number = $("[id*=txtID_Number]").val();
    //    locationModel.DateOfBirth = $("[id*=txtDateOfBirth]").val();
    //    locationModel.Gender
    //    $.ajax({
    //        url: "/Home/SavePatient",
    //        type: "POST",
    //        data: $("#frmHome").serialize(),
    //        async: false,
    //        error: function (xhr, status, error)
    //        {
    //            alert("was not successful xhr: " + xhr.value + " status: " + status.value + " error: " + error.value);
    //        },
    //        success: function (Record)
    //        {
                
    //        }
    //    })
    //    //alert("i clicked this");
    //}
</script>