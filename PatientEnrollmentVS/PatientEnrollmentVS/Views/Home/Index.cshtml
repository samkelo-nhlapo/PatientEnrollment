@{
    ViewBag.Title = "Home Page";
}

@using PatientEnrollmentVS.Models;
@model LocationModel

<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

@* Autocomplete library *@
<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css" />
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>

<script type="text/javascript">var $j = $.noConflict(true)</script>

@using (Html.BeginForm("SavePatient", "Home", FormMethod.Post, new { @id = "frmHome" }))
{
    @Html.AntiForgeryToken()

    // (Html.TextBoxFor) are Html Helpers

    <div class="row">
        <label>First Name</label>
        @Html.TextBoxFor(x => x.FirstName, new { @class = "select-block", id = "FirstName", name = "FirstName" })

        <label>Last Name</label>
        @Html.TextBoxFor(x => x.LastName, new { @class = "select-block", id = "LastName",  name = "LastName" })
    </div>

    <div class="row">
        <label>ID Number</label>
        @Html.TextBoxFor(x => x.ID_Number, new { @class = "select-block", id = "IDNumber",  name = "IDNumber" })
    </div>

    <div class="row">
        <label>DateOfBirth</label>
        @Html.TextBoxFor(x => x.DateOfBirth, new { @class = "select-block", id = "DateOfBirth", name = "DateOfBirth" })
    </div>


    <div class="row">

        <label>Gender</label>
        @Html.DropDownListFor(x => x.GenderId, new List<SelectListItem>()
            { new SelectListItem()
                {
                    Value = Model.GenderId,
                    Text = Model.GenderDescription,
                    Selected = true
                }
            }, "0", new { id = "dllGetGender", @Class = "select-block", name = "Gender" })
    </div>


    <div class="row">
        <label>PhoneNumber</label>
        @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "select-block", id = "PhoneNumber", name = "PhoneNumber" })
        
        <label>Phone Type</label>
        @Html.DropDownListFor(x => x.PhoneTypeId, new List<SelectListItem>()
                { new SelectListItem()
                    {
                        Value = Model.PhoneTypeId,
                        Text = Model.PhoneTypeDescription,
                        Selected = true
                    }
                }, "0", new { id = "dllGetPhoneType", @class = "select-block", name = "PhoneType" })

    </div>

    <div class="row">
        <label>Email</label>
        @Html.TextBoxFor(x => x.Email, new { @class = "select-block", id = "Email",  name = "Email" })
        
        <label>Email Type</label>
        @Html.DropDownListFor(x => x.EmailTypeId, new List<SelectListItem>()
                { new SelectListItem()
                    {
                        Value = Model.EmailTypeId,
                        Text = Model.EmailTypeDescription,
                        Selected = true
                    }
                }, "0", new { id = "dllGetEmailtype", @class = "select-block", name = "EmailType" })

    </div>

    <div class="row">
        <label>Line1</label>
        @Html.TextBoxFor(x => x.Line1, new { @class = "select-block", id = "Line1", name = "Line1" })
    </div>

    <div class="row">
        <label>Line2</label>
        @Html.TextBoxFor(x => x.Line2, new { @class = "select-block", id = "Line2", name = "Line2" })
    </div>

    <div class="row">
        <label>Cities</label>
        @Html.TextBoxFor(x => x.CityId, new { @class = "select-block", @id = "dllGetCities",  name = "GetCities" })
    </div>

    @*<div class="row">
        <label>Provinces</label>
        @Html.DropDownListFor(x => x.ProvinceId, new List<SelectListItem>()
            { new SelectListItem()
                {
                    Value = Model.ProvinceId,
                    Text = Model.ProvinceName,
                    Selected = true
                }
            }, "0", new { id = "dllGetProvinces", @class = "select-block", name = "Provinces" })
    </div>

    <div class="row">
        <label>Countries</label>
        @Html.EditorFor(x => x.CountryId, new { htmlAttributes = new { @class = "select-block", @id = "dllGetCountries" , name = "Countries"} })
    </div>

    <div class="row">
        <label>Merital Status</label>
        @Html.DropDownListFor(x => x.MaritalStatusId, new List<SelectListItem>()
            { new SelectListItem()
                {
                    Value = Model.MaritalStatusId,
                    Text = Model.MaritalStatusDescription,
                    Selected = true
                }
            }, "0", new { id = "dllGetMeritalStatus", @class = "select-block", name = "MeritalStatus" })
    </div>

    <div class="row">
        <label>MedicationList</label>
        @Html.TextBoxFor(x => x.MedicationList, new { @class = "select-block", id = "MedicationList",  name = "MedicationList" })
    </div>

    <div class="row">
        <label>EmergencyName</label>
        @Html.TextBoxFor(x => x.EmergencyName, new { @class = "select-block", id = "EmergencyName", name = "EmergencyName" })
        <label>Relationship</label>
        @Html.TextBoxFor(x => x.Relationship, new { @class = "select-block", id = "Relationship", name = "Relationship" })
        <label>His/Her Date Or birth</label>
        @Html.TextBoxFor(x => x.RelationshipDateOfBirth, new { @class = "select-box", id = "RelationshipDateOfBirth",  name = "RelationshipDateOfBirth" })
    </div>

    <div class="row">
        <label>PrimaryCarrierName</label>
        @Html.TextBoxFor(x => x.PrimaryCarrierName, new { @class = "select-block", id = "PrimaryCarrierName",  name = "PrimaryCarrierName" })
        <label>FPolicyHolderPhoneNumber</label>
        @Html.TextBoxFor(x => x.FPolicyHolderPhoneNumber, new { @class = "select-block", id = "FPolicyHolderPhoneNumber", name = "FPolicyHolderPhoneNumber" })
        <label>FPolicyHolderName</label>
        @Html.TextBoxFor(x => x.FPolicyHolderName, new { @class = "select-block", id = "FPolicyHolderName", name = "FPolicyHolderName" })
        <label>FPolicyHolderDateOfBirth</label>
        @Html.TextBoxFor(x => x.FPolicyHolderDateOfBirth, new { @class = "select-block", id = "FPolicyHolderDateOfBirth",  name = "FPolicyHolderDateOfBirth" })
        <label>FPolicyHolderRelationship</label>
        @Html.TextBoxFor(x => x.FPolicyHolderRelationship, new { @class = "select-block", id = "FPolicyHolderRelationship",  name = "FPolicyHolderRelationship" })
        <label>FPolicyHolderGenderIDFK</label>
        @Html.TextBoxFor(x => x.FPolicyHolderGenderIDFK, new { @class = "select-block", id = "FPolicyHolderGenderIDFK", name = "FPolicyHolderGenderIDFK" })
    </div>
    <div class="row">

        <label>SecondaryCarrierName</label>
        @Html.TextBoxFor(x => x.SecondaryCarrierName, new { @class = "select-block", id = "SecondaryCarrierName", name = "SecondaryCarrierName" })
        <label>SPolicyHolderPhoneNumber</label>
        @Html.TextBoxFor(x => x.SPolicyHolderPhoneNumber, new { @class = "select-block", id = "SPolicyHolderPhoneNumber", name = "SPolicyHolderPhoneNumber" })
        <label>SPolicyHolderName</label>
        @Html.TextBoxFor(x => x.SPolicyHolderName, new { @class = "select-block", id = "SPolicyHolderName", name = "SPolicyHolderName" })
        <label>SPolicyHolderDateOfBirth</label>
        @Html.TextBoxFor(x => x.SPolicyHolderDateOfBirth, new { @class = "select-block", id = "SPolicyHolderDateOfBirth", name = "SPolicyHolderDateOfBirth" })
        <label>SPolicyHolderRelationship</label>
        @Html.TextBoxFor(x => x.SPolicyHolderRelationship, new { @class = "select-block", id = "SPolicyHolderRelationship", name = "SPolicyHolderRelationship" })
        <label>SPolicyHolderGenderIDFK</label>
        @Html.TextBoxFor(x => x.SPolicyHolderGenderIDFK, new { @class = "select-block", id = "SPolicyHolderGenderIDFK", name = "SPolicyHolderGenderIDFK" })
    </div>*@

    <input type="button" value="Save Event" class="btn btn-primary" onclick="SaveButton()" />

}

<script type="text/javascript">

    $j.ajax({
        url: "/Home/GetGender",
        dataType: "json",
        cache: true,
        async: true,
        global: false,
        success: function (data) {
            var items = "<option value ='" + "0" + "'>" + "Select Gender" + "</option>";

            $.each(data, function (i, value) {
                items += "<option value ='" + value.GenderId + "'>" + value.GenderDescription + "</option>";

                $('#dllGetGender').html(items);
            })

        },
        error: function (xhr) {
            alert("Gender not successful");
        }
    })

    $j.ajax({
        url: "/Home/GetPhoneType",
        dataType: "json",
        cache: true,
        async: true,
        global: false,
        success: function (data) {
            var items = "<option value ='" + "0" + "'>" + "Select PhoneType" + "</option>";
            $.each(data, function (i, value) {
                items += "<option value ='" + value.PhoneTypeId + "'>" + value.PhoneTypeDescription + "</option>";
                $('#dllGetPhoneType').html(items);
            })

        },
        error: function (xhr) {
            alert("Phone type not successfull");
        }
    })

    $j.ajax({
        url: "/Home/GetEmailType",
        dataType: "json",
        cache: true,
        async: true,
        global: false,
        success: function (data) {
            var items = "<option value ='" + "0" + "'>" + "Select EmailType" + "</option>";

            $.each(data, function (i, value) {
                items += "<option value ='" + value.EmailTypeId + "'>" + value.EmailTypeDescription + "</option>";

                $('#dllGetEmailtype').html(items);
            })

        },
        error: function (xhr) {
            alert("emailType not successful");
        }
    })


    $j(function () {
        debugger
        $j("#dllGetCities").autocomplete({
            autoFocus: true,
            source: function (request, response) {
                $.ajax({
                    url: "/Home/GetCities",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.CityName, value: item.CityId };
                        }))
                    },
                    error: function () {

                        alert("cities not successful");
                    }
                })
            },
            messeges: { noResults: "", results: "" }
        })
    })

    $j.ajax
    (
        {

            url: "/Home/GetProvinces",
            dataType: "json",
            cache: true,
            async: true,
            global: false,
            success: function (data) {
                var items = "<option value ='" + "0" + "'>" + "Select Province" + "</option>";

                $.each(data, function (i, value) {
                    items += "<option value ='" + value.ProvinceId + "'>" + value.ProvinceName + "</option>";

                    $('#dllGetProvinces').html(items);
                })
            },
            error: function (xhr) {
                alert("Not successfull")
            }
        }
    )

    $j(function () {
        $j("#dllGetCountries").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Home/GetCountries",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.CountryId, value: item.CountryName };
                        }))
                    },
                    error: function () {
                        alert("Countries not successful");
                    }
                })
            },
            messages: { noResults: "", results: "" }

        })
    })
    $j.ajax
    (
        {
            url: "/Home/GetMeritalStatus",
            dataType: "json",
            cache: true,
            async: true,
            global: false,
            success: function (data) {

                var items = "<option value ='" + "0" + "'>" + "Select Status" + "</option>";

                $.each(data, function (i, value) {
                    items += "<option value ='" + value.MaritalStatusId + "'>" + value.MaritalStatusDescription + "</option>";

                    $('#dllGetMeritalStatus').html(items);
                })
            },
            error: function (xhr) {
                alert("not successfull ");
            }
        }
    )
</script>
<script>

    function SaveButton() {
        debugger
        $j.ajax({
            type: "POST",
            url: "/Home/AddPatient",
            data: $("#fromHome").serialize(),
            dataType: "json",
            async: false,
            success: function (data) {
                alert("successfully saved ");
            },
            error: function () {
                alert("not successfully saved ");
            }
        })
    }


</script>
